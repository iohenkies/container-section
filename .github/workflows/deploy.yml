name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    container:                                              # All the below can run on the runner as is. But we're defining a container now,
      image: node:16                                        # and therefore all the below steps will be ruin in this container
      env:
        CONTAINER_KEY: CONTAINER_VALUE
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb                      # Uses the label as specified on line 25. Network overlay is created automatically by GitHub actions, 
      MONGODB_USERNAME: root                                # but only when using a container as spoecified on line 14. This will not work when running directly on the runner!
      MONGODB_PASSWORD: example                             # For the services container, the credentials should be root / example
      PORT: 8080                                            # Not explained properly how to use this / shift between example credentials and real life credentials
    services:
      mongodb:
        image: mongo
        env:                                                # The environment variables needed by a mongo containers, as explained in the default image documentation
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # Requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
